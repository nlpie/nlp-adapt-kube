apiVersion: argoproj.io/v1alpha1
kind: Workflow                  #new type of k8s spec
metadata:
  generateName: nlp-adapt-wf-mm-    #name of workflow spec
spec:
  entrypoint: nlp-adapt-biomedicus-services          #invoke the build template
  volumes:
  - name: test-rtf
    hostPath: # change this accordingly to your host system
      path: /home/gms/projects/k8s/cpc
  
  templates:

  - name: nlp-adapt-biomedicus
    steps:
    - - name: biomedicus
        template: run-biomedicus
        withSequence: # spin up arbitrary number pods
          count: 1

  - name: run-biomedicus
    container:
      image: ahc-nlpie-docker.artifactory.umn.edu/biomedicus
      imagePullPolicy: Never
      tty: true
      stdin: true
      command: ["/usr/share/biomedicus/bin/deployBiomedicusPipeline.sh"] 
      stdin: true
      tty: true
      name: biomedicus

  - name: run-client-biomedicus
    nodeSelector:
      node: thalia2
    container:
      image: ahc-nlpie-docker.artifactory.umn.edu/cpc
      imagePullPolicy: Never
      env:
        - name: NLPADAPT_BROKER_URI
          value: nio://amq.default:61616
        - name: NLPADAPT_DATASOURCE_URI #NLPADAPT_DATASOURCE_URI
          value: jdbc:oracle:thin:@ctsidbprod0.ahc.umn.edu:1521:TIDEPRDP
        #- name: NLPADAPT_DATASOURCE_USERNAME
        #  value: NLP_ADAPT[NLP_SANDBOX]
        #- name: NLPADAPT_DATASOURCE_PASSWORD
        #  value: aifa0iepah_m1Iex
        - name: NLPADAPT_DATASOURCE_USERNAME
          value: <USER NAME>
        - name: NLPADAPT_DATASOURCE_PASSWORD
          value: <PW>
      command: ["/bin/bash","-c", "groovy /home/groovy/scripts/biomedicus_client.groovy"]
      volumeMounts:
      - name: test-rtf
        mountPath:  /home/groovy/data
        readOnly: false
