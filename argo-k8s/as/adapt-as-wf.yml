ApiVersion: argoproj.io/v1alpha1
kind: Workflow                  #new type of k8s spec
metadata:
  generateName: nlp-adapt-wf-    #name of workflow spec
spec:
  entrypoint: run-adapt          #invoke the build template
  volumes:
      #  - name: test-data
      #    hostPath: # change this accordingly to your host system
      #      path: /Users/gms/development/nlp/nlpie/data/adapt/amq/data  
      #  - name: test-conf
      #    hostPath: # change this accordingly to your host system
      #      path: /Users/gms/development/nlp/nlpie/data/adapt/amq/conf  
  - name: test-rtf
    hostPath: # change this accordingly to your host system
      path: /Users/gms/development/nlp/nlpie/nlp-adapt-kube/docker/uima-as/client/data 

  templates:
  - name: run-adapt
    steps:
    - - name: run-others
        template: run-others

  - name: run-others # run steps
    steps:

    - - name: amq-deployment
        template: amq-server-d

    - - name: amq-service
        template: amq-server-s

    
        #- - name: biomedicus
        #template: run-biomedicus
    
    
        #- - name: client
        #template: run-client

        #  - name: amq-server-d
        #    resource:
        #      action: create
        #      manifest: |
        #        apiVersion: apps/v1
        #        kind: Deployment
        #        metadata:
        #          name: amq
        #          #namespace: adapt
        #        spec:
        #          selector:
        #            matchLabels:
        #              app: amq
        #              track: stable
        #          template:
        #            metadata:
        #              labels:
        #                app: amq
        #                track: stable
        #          
        #            spec:
        #              containers:
        #              - image: gms/activemq
        #                imagePullPolicy: Never
        #                name: amq
        #                ports:
        #                - containerPort: 61616
        #                - containerPort: 8161
        #                volumeMounts:
        #                - name: test-data
        #                  mountPath: /opt/activemq/data
        #                  readOnly: false  
        #                - name: test-conf
        #                  mountPath: /opt/activemq/conf
        #                  readOnly: false  
        #              volumes:
        #              - name: test-data
        #                hostPath:
        #                  path:  /Users/gms/development/nlp/nlpie/data/adapt/amq/data  
        #              - name: test-conf
        #                hostPath:
        #                  path:  /Users/gms/development/nlp/nlpie/data/adapt/amq/conf  
        # 
        #
        #  - name: amq-server-s
        #    resource:
        #      action: create
        #      manifest: |
        #        apiVersion: v1
        #        kind: Service
        #        metadata:
        #          name: amq
        #          #namespace: adapt
        #          labels:
        #            app: amq
        #        spec:
        #          selector:
        #            app: amq
        #          ports:
        #          - name: test1
        #            protocol: TCP
        #            port: 61616
        #            targetPort: 61616
        #            nodePort: 31344
        #          - name: test2
        #            protocol: TCP
        #            port: 8161
        #            targetPort: 8161
        #            nodePort: 31345
        #          type: NodePort

  - name: run-rtf
    daemon: true
    container:
      image: ahc-nlpie-docker.artifactory.umn.edu/biomedicus
      imagePullPolicy: Never
      command: ["/usr/share/biomedicus/bin/deployRtfPipeline.sh"] 
    
  - name: run-biomedicus
    daemon: true
    container:
      image:  ahc-nlpie-docker.artifactory.umn.edu/biomedicus
      imagePullPolicy: Never
      tty: true
      stdin: true
      command: ["/usr/share/biomedicus/bin/deployBiomedicusPipeline.sh"] 

  - name: run-client
    container:
      image: ahc-nlpie-docker.artifactory.umn.edu/cpc
      imagePullPolicy: Never
      env:
        - name: NLPADAPT_BROKER_URI
          value: nio://amq.default:61616
        - name: NLPADAPT_DATASOURCE_URI
          value: jdbc:sqlite:mimic-rtf.db
      command: ["/bin/bash","-c", "groovy /home/groovy/scripts/client.groovy"]
      volumeMounts:
      - name: test-rtf
        mountPath:  /home/groovy/data
        readOnly: false
