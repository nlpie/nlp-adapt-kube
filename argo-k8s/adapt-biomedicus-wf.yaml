apiVersion: argoproj.io/v1alpha1
kind: Workflow                  #new type of k8s spec
metadata:
  generateName: nlp-adapt-wf-    #name of workflow spec
spec:
  entrypoint: nlp-adapt-metamap-services          #invoke the build template
  volumes:
  - name: test-rtf
    hostPath: # change this accordingly to your host system
      path: /home/gms/projects/k8s/cpc
  
  templates:

  - name: nlp-adapt-metamap-services
    steps:
    
    - - name: biomedicus-deployment
        template: biomedicus-d
    - - name: biomedicus-service
        template: biomedicus-s
    - - name: rtf-deployment
        template: rtf-d
    - - name: rtf-service
        template: rtf-s

  - name: run-rtf
    daemon: true
    nodeSelector:
      node: atlas0
    container:
      image: ahc-nlpie-docker.artifactory.umn.edu/biomedicus
      imagePullPolicy: Never
      resources:
        limits:
          memory: "2G"
        requests:
          memory: "250M"
      command: ["/usr/share/biomedicus/bin/deployRtfPipeline.sh"] 

  - name: run-biomedicus
    daemon: true
    nodeSelector:
      node: atlas0
    container:
      image:  ahc-nlpie-docker.artifactory.umn.edu/biomedicus
      imagePullPolicy: Never
      resources:
        limits:
          memory: "5G"
        requests:
          memory: "250M"
      tty: true
      stdin: true
      command: ["/usr/share/biomedicus/bin/deployBiomedicusPipeline.sh"] 

  - name: biomedicus-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: biomedicus
        spec:
          selector:
            matchLabels:
              app: biomedicus
              track: stable
          template:
            metadata:
              labels:
                app: biomedicus
                track: stable
            spec:
              nodeSelector:
                node: atlas0
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/biomedicus
                imagePullPolicy: Never
                command: ["/usr/share/biomedicus/bin/deployBiomedicusPipeline.sh"] 
                stdin: true 
                tty: true 
                name: biomedicus
                ports:
                - containerPort: 35555

  - name: biomedicus-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: biomedicus
          namespace: default
          labels:
            app: biomedicus
        spec:
          selector:
            app: biomedicus
          ports:
          - port: 35555
            targetPort: 35555


  - name: rtf-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: rtf
        spec:
          selector:
            matchLabels:
              app: rtf
              track: stable
          template:
            metadata:
              labels:
                app: rtf
                track: stable
            spec:
              nodeSelector:
                node: atlas0
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/biomedicus
                imagePullPolicy: Never
                command: ["/usr/share/biomedicus/bin/deployRtfPipeline.sh"] 
                stdin: true 
                tty: true 
                name: rtf
                ports:
                - containerPort: 35555

  - name: rtf-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: rtf
          namespace: default
          labels:
            app: rtf
        spec:
          selector:
            app: rtf
          ports:
          - port: 35555
            targetPort: 35555

  - name: run-client
    nodeSelector:
      node: atlas0
    container:
      image: ahc-nlpie-docker.artifactory.umn.edu/cpc
      imagePullPolicy: Never
      resources:
        limits:
          memory: "10G"
        requests:
          memory: "500M"
      env:
        - name: NLPADAPT_BROKER_URI
          value: nio://amq.default:61616
        - name: NLPADAPT_INPUT_DATASOURCE_URI #NLPADAPT_DATASOURCE_URI
          value: jdbc:sqlite:mimic-rtf.db
      command: ["/bin/bash","-c", "groovy /home/groovy/scripts/client.groovy"]
      volumeMounts:
      - name: test-rtf
        mountPath:  /home/groovy/data
        readOnly: false

