apiVersion: argoproj.io/v1alpha1
kind: Workflow                  #new type of k8s spec
metadata:
  generateName: nlp-adapt-wf-    #name of workflow spec
spec:
  entrypoint: nlp-adapt-metamap-services          #invoke the build template
  
  templates:

  - name: nlp-adapt-metamap-services
    steps:
    # Active MQ
    - - name: amq-deployment
        template: amq-d
    - - name: amq-service
        template: amq-s
   
    # RTF writer 
    - - name: rtf-deployment
        template: rtf-d
    - - name: rtf-service
        template: rtf-s

    # metamap
    - - name: medpost-deployment
        template: medpost-d
    - - name: medpost-service
        template: medpost-s
    - - name: wsd-deployment
        template: wsd-d
    - - name: wsd-service
        template: wsd-s
    - - name: mmannotator-deployment
        template: mmannotator-d
    - - name: mmannotator-service
        template: mmannotator-s
    - - name: mmserver-deployment
        template: mmserver-d
    - - name: mmserver-service
        template: mmserver-s


  # amq deployment/service
  - name: amq-server-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: amq
          namespace: adapt
        spec:
          selector:
            matchLabels:
              app: amq
              track: stable
          template:
            metadata:
              labels:
                app: amq
                track: stable
            spec:
              containers:
              - image: gms/activemq
                imagePullPolicy: Never
                name: amq
                ports:
                - containerPort: 61616
                - containerPort: 8161
                volumeMounts:
                - name: test-data
                  mountPath: /opt/activemq/data
                  readOnly: false  
                - name: test-conf
                  mountPath: /opt/activemq/conf
                  readOnly: false  
              volumes:
              - name: test-data
                hostPath:
                  path:  /Users/gms/development/nlp/nlpie/data/adapt/amq/data  
              - name: test-conf
                hostPath:
                  path:  /Users/gms/development/nlp/nlpie/data/adapt/amq/conf  
   

  - name: amq-server-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: amq
          namespace: adapt
          labels:
            app: amq
        spec:
          selector:
            app: amq
          ports:
          - name: test1
            protocol: TCP
            port: 61616
            targetPort: 61616
            nodePort: 31344
          - name: test2
            protocol: TCP
            port: 8161
            targetPort: 8161
            nodePort: 31345
          type: NodePort
       

  # rtf deployment/service
  - name: rtf-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: rtf
        spec:
          selector:
            matchLabels:
              app: rtf
              track: stable
          template:
            metadata:
              labels:
                app: rtf
                track: stable
            spec:
                #nodeSelector:
                #dns: dns1
              containers:
              - image: gms/rtf
                imagePullPolicy: Never
                name: rtf
                command: ["/usr/share/biomedicus/bin/deployRtfPipeline.sh"] 

  - name: rtf-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: rtf
          namespace: default
          labels:
            app: rtf
        spec:
          selector:
            app: rtf


  # medpost deployment/service
  - name: medpost-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: medpost
        spec:
          selector:
            matchLabels:
              app: medpost
              track: stable
          template:
            metadata:
              labels:
                app: medpost
                track: stable
            spec:
                #nodeSelector:
                #dns: dns1
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/medpost-skr
                imagePullPolicy: Never
                name: medpost
                ports:
                - containerPort: 1795


  - name: medpost-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: medpost
          namespace: default
          labels:
            app: medpost
        spec:
          selector:
            app: medpost
          ports:
          - port: 1795
            targetPort: 1795


  # wsd deployment/service     
  - name: wsd-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: wsd
        spec:
          selector:
            matchLabels:
              app: wsd
              track: stable
          template:
            metadata:
              labels:
                app: wsd
                track: stable
            spec:
                nodeSelector:
                dns: dns1
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/wsd_server
                imagePullPolicy: Never
                name: wsd
                ports:
                - containerPort: 5554

  - name: wsd-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: wsd
          namespace: default
          labels:
            app: wsd
        spec:
          selector:
            app: wsd
          ports:
          - port: 5554
            targetPort: 5554


  # mmannotator deployment/service
  - name: mmannotator-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: mmannotator
        spec:
          selector:
            matchLabels:
              app: mmannotator 
              track: stable
          template:
            metadata:
              labels:
                app: mmannotator
                track: stable
            spec:
                #nodeSelector:
                #dns: dns1
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/mmannotator
                imagePullPolicy: Never
                name: mmannotator
                command: ["/usr/share/public_mm/src/uima/bin/deployMetamapPipeline.sh"] 

  
  - name: mmannotator-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: mmannotator
          namespace: default
          labels:
            app: mmannotator
        spec:
          selector:
            app: mmannotator


  # mmserver deployment and service
  - name: mmserver-d
    resource:
      action: create
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: mmserver
        spec:
          selector:
            matchLabels:
              app: mmserver
              track: stable
          template:
            metadata:
              labels:
                app: mmserver
                track: stable
            spec:
                nodeSelector:
                dns: dns1
              containers:
              - image: ahc-nlpie-docker.artifactory.umn.edu/mmserver
                imagePullPolicy: Never
                name: mmserver
                ports:
                - containerPort: 8066
                env:
                - name: TAGGER_SERVER_HOSTS 
                  value: medpost.default
                - name: WSD_SERVER_HOSTS
                  value: wsd.default
                - name: ACCEPTED_HOSTS
                  value: mmannotator.default


  - name: mmserver-s
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: mmserver
          namespace: default
          labels:
            app: mmserver
        spec:
          selector:
            app: mmserver
          ports:
          - port: 8066
            targetPort: 8066



       
